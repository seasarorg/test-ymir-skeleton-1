# /---------------------------------------------------------------------------
# classificationDefinitionMap: (NotRequired - Default 'map:{}')
#
# The definition of classification.
#
# Specification:
# map: {
#     [classification-name] = list:{
#         ; map:{topComment=[comment]; dataType=[String(default) or Number]}
#         ; map:{code=[code]; name=[name]; alias=[alias]; comment=[comment]}
#         ; map:{
#             ; table=[table-name]
#             ; code=[column-name for code]; name=[column-name for name]
#             ; alias=[column-name for alias]; comment=[column-name for comment]}
#             ; where=[condition for select]; orderBy=[column-name for ordering]
#             ; exceptCodeList=[the list of except code]
#             ; suppressAutoDeploy=[true or false(default)]
#         }
#     }
# }
# 
# *The line that starts with '#' means comment-out.
#
map:{
    #; Flg = list:{
    #    ; map:{topComment=フラグを示す; dataType=Number}
    #    ; map:{code=1; name=True ; alias=はい  ; comment=有効を示す}
    #    ; map:{code=0; name=False; alias=いいえ; comment=無効を示す}
    #}
    #; MemberStatus = list:{
    #    ; map:{topComment=会員の状態を示す; dataType=String}
    #    ; map:{topComment=入会から退会までの会員のステータスを示す}
    #    ; map:{code=PRV; name=Provisional; alias=仮会員  ; comment=入会直後のステータスで一部のサイトサービスが利用可能}
    #    ; map:{code=FML; name=Formalized ; alias=正式会員; comment=正式な会員としてサイトサービスが利用可能}
    #    ; map:{code=WDL; name=Withdrawal ; alias=退会会員; comment=退会が確定した会員でサイトサービスはダメ}
    #
    #    # If you use table classification, specify like this:
    #    #; map:{table=MEMBER_STATUS; code=MEMBER_STATUS_CODE; name=MEMBER_STATUS_NAME; orderBy=DISPLAY_ORDER}
    #}
}
# ----------------/