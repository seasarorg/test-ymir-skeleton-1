${database.allClassCopyright}package ${glPackageBaseCommonBhv};

import ${glPackageBaseCommon}.${glEntity};
import ${glPackageBaseCommonCBean}.${glConditionBean};
import ${glPackageBaseCommonCBean}.${glListResultBean};
import ${glPackageBaseCommonCBean}.${glPagingResultBean};
import ${glPackageBaseCommonDBMeta}.${glDBMeta};

/**
 * The interface of behavior-readable.
 * @author ${database.ClassAuthor}
 */
public interface ${glBehaviorReadable} {

    // ===================================================================================
    //                                                                          Table name
    //                                                                          ==========
    /**
     * Get table DB name.
     * @return Table DB name. (NotNull)
     */
    public String getTableDbName();

    // ===================================================================================
    //                                                                              DBMeta
    //                                                                              ======
    /**
     * Get the instance of DBMeta.
     * @return The instance of DBMeta. (NotNull)
     */
    public ${glDBMeta} getDBMeta();

    // ===================================================================================
    //                                                                        New Instance
    //                                                                        ============
    /**
     * New entity.
     * @return Entity. (NotNull)
     */
    public ${glEntity} newEntity();

    /**
     * New condition-bean.
     * @return Condition-bean. (NotNull)
     */
    public ${glConditionBean} newConditionBean();

    // ===================================================================================
    //                                                                       Basic Get All
    //                                                                       =============
    /**
     * Get count all.
     * @return Count all.
     */
    public int getCountAll();

    // ===================================================================================
    //                                                                    Basic Read Count
    //                                                                    ================
    /**
     * Read count by condition-bean.
     * <pre>
     * If the argument 'condition-bean' is effective about fetch-scope,
     * this method invoke select count ignoring the fetch-scope.
     * </pre>
     * @param cb Condition-bean. This condition-bean should not be set up about fetch-scope. (NotNull)
     * @return Read count. (NotNull)
     */
    public int readCount(${glConditionBean} cb);

    // ===================================================================================
    //                                                                   Basic Read Entity
    //                                                                   =================
    /**
     * Read entity by condition-bean.
     * @param cb Condition-bean. (NotNull)
     * @return Read entity. (Nullalble)
     * @exception ${glPackageBaseCommonException}.${glEntityDuplicatedException} When the entity has been duplicated.
     */
    public ${glEntity} readEntity(${glConditionBean} cb);

    /**
     * Read simple entity by condition-bean with deleted check.
     * @param ${glAttachedCBArgsVariableName} Condition-bean. (NotNull)
     * @return Read entity. (NotNull)
     * @exception ${glPackageBaseCommonException}.${glEntityAlreadyDeletedException} When the entity has already been deleted.
     * @exception ${glPackageBaseCommonException}.${glEntityDuplicatedException} When the entity has been duplicated.
     */
    public ${glEntity} readEntityWithDeletedCheck(${glConditionBean} ${glAttachedCBArgsVariableName});

    // ===================================================================================
    //                                                                     Basic Read List
    //                                                                     ===============
    /**
     * Read list as result-bean.
     * @param ${glAttachedCBArgsVariableName} Condition-bean. (NotNull)
     * @return List-result-bean. If the select result is zero, it returns empty list. (NotNull)
     */
    public ${glListResultBean}${database.filterGenericsString(${glEntity})} readList(${glConditionBean} ${glAttachedCBArgsVariableName});

    /**
     * Read page as result-bean.
     * @param ${glAttachedCBArgsVariableName} Condition-bean. (NotNull)
     * @return Read page. (NotNull)
     */
    public ${glPagingResultBean}${database.filterGenericsString(${glEntity})} readPage(final ${glConditionBean} ${glAttachedCBArgsVariableName});

    // ===================================================================================
    //                                                                            Sequence
    //                                                                            ========
    /**
     * ${database.ImplementComment}
     * @return The value of sequence. (NotNull)
     */
    public ${database.sequenceReturnType} readNextVal();

    // ===================================================================================
    //                                                                             Warm Up
    //                                                                             =======
    /**
     * Warm up the command of behavior.
     */
    public void warmUpCommand();
}
